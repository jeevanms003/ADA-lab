#include <iostream>
#include <vector>
using namespace std;

void printBoard(const vector<vector<int>>& board, int N) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cout << (board[i][j] ? "Q " : ". ");
        }
        cout << "\n";
    }
    cout << "\n";
}

bool isSafe(const vector<vector<int>>& board, int row, int col, int N) {
    for (int i = 0; i < row; i++) {
        if (board[i][col] == 1)
            return false;
    }

    for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 1)
            return false;
    }

    for (int i = row - 1, j = col + 1; i >= 0 && j < N; i--, j++) {
        if (board[i][j] == 1)
            return false;
    }

    return true;
}

bool solveNQueensUtil(vector<vector<int>>& board, int row, int N) {
    if (row == N) {
        printBoard(board, N);
        return true;
    }

    bool res = false;
    for (int col = 0; col < N; col++) {
        if (isSafe(board, row, col, N)) {
            board[row][col] = 1;
            res = solveNQueensUtil(board, row + 1, N) || res;
            board[row][col] = 0;
        }
    }

    return res;
}

void solveNQueens(int N) {
    vector<vector<int>> board(N, vector<int>(N, 0));
    if (!solveNQueensUtil(board, 0, N)) {
        cout << "No solution exists for N = " << N << "\n";
    }
}

int main() {
    int N;
    cout << "Enter the number of queens (N): ";
    cin >> N;
    if (N <= 0) {
        cout << "Please enter a positive integer.\n";
        return 1;
    }
    cout << "\nSolutions for " << N << "-Queens problem:\n\n";
    solveNQueens(N);
    return 0;
}

